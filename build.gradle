plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // Protobuf & gRPC
    implementation 'com.google.protobuf:protobuf-java:3.24.0'
    implementation 'io.grpc:grpc-protobuf:1.58.0'
    implementation 'io.grpc:grpc-stub:1.58.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.google.api.grpc:proto-google-common-protos:2.22.0'
}

def grpcVersion = '1.58.0'
def protobufVersion = '3.24.0'

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().configureEach { task ->
            task.builtins {
                java {}
            }
            task.plugins {
                grpc {}
            }
            task.inputs.files fileTree('proto')
            task.inputs.files fileTree('src/main/proto')
        }
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
            include '**/*.proto'
            srcDir 'proto'
        }
        resources {
            exclude '**/*.proto'
        }
    }
}

// 필요한 task만 활성화하고 나머지는 모두 비활성화
tasks.all {
    if (![
        'clean',
        'compileJava',
        'generateProto',
        'classes',
        'build'
    ].contains(it.name)) {
        it.enabled = false
    }
}

// clean task 수정
clean {
    delete buildDir
}

// build 순서 보장
tasks.compileJava.dependsOn tasks.generateProto

// build task 재정의
tasks.named('build') {
    dependsOn 'generateProto', 'compileJava', 'classes'
    enabled = true
    tasks.findByName('jar')?.enabled = false
    tasks.findByName('assemble')?.enabled = false
}
